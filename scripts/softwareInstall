#!/bin/bash

# softwareIntall -- script to autoinstall desired software

sudo="sudo"
release=$(lsb_release -sc)
#custom_packages=""
tmpdir=$(mktemp -d)
log=$(mktemp)
user=$(whoami)
docker_repo="deb [arch=amd64] https://download.docker.com/linux/ubuntu $release stable"
packages="whois htop hping3 python python-pip python-virtualenv python-setuptools python3-pip python3-virtualenv python3-setuptools preload net-tools curl gnome-tweak-tool nmap ndiff vim git tshark apt-transport-https ca-certificates software-properties-common docker.io"

declare -a packages

print_banner(){
cat <<EO
┌─────────────────────────────────────────────────────────┐
│                    AutoInstall 0.1                      │
└─────────────────────────────────────────────────────────┘
EO
}


log_icon="\e[31m✓\e[0m"
log_icon_ok="\e[32m✓\e[0m"
log_icon_nok="\e[31m✗\e[0m"

run_and_log(){
    $1 &> ${log} && {
        _log_icon=$log_icon_ok
    } || {
        _log_icon=$log_icon_nok
        exit_=1
    }
    echo -e "${_log_icon} ${2}"
    [[ $exit_ ]] && { echo -e "\t -> ${_log_icon} $3";  exit; }
}

check_user(){
    [[ $UID != 0 ]] && {
        type -f $sudo || {
            echo "You're not root and you don't have $sudo, please become root or install $sudo before executing $0"
            exit
        }
    } || {
        sudo=""
    }

    [[ ! -e /etc/debian_version ]] && {
        echo  "This script currently works only on debian-based (debian, ubuntu...) distros"
        exit 1
    }
}

prepare_docker(){
	cd ${tmpdir}
	echo ${docker_repo} | $sudo tee -a /etc/apt/sources.list.d/docker-ce.list
	wget -qO - https://download.docker.com/linux/ubuntu/gpg | $sudo apt-key add -
	return 0
}

install_packages(){
   $sudo apt update
   $sudo apt upgrade -y
   $sudo apt install -y ${packages["${release}"]}
#   $sudo apt install -y $custom_packages
   return 0
}

modify_user(){
   $sudo usermod -aG docker ${user}
   return 0
}

reboot_message(){
   echo "Please reboot at your earliest convenience"
   return 0
}


print_banner
check_user

echo "Logging enabled on ${log}"

run_and_log install_packages "Installing packages ${packages[$release]}" "Something failed installing packages, please review the log file"
